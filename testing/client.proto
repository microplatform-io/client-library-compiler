package teltech;

import "constants.proto";
import "errors.proto";

message AccessNumber {
    optional Info info                      = 1;
    optional Location location              = 2;
    optional string description             = 3;
    repeated string tags                    = 4;
    optional string access_number           = 5;
    optional bool access_number_modifiable  = 6;
    optional string e164_country_code       = 7; // Calling prefix, ie. +1, +44, etc
    optional int32 seconds_reserved         = 8;
}

message AccessNumberList {
    message Filter {
        optional Location location          = 1;
        optional string e164_country_code   = 2;
        repeated string tags                = 3;
        
        enum Blah {
	        X = 1;
        }
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED        = 1;
        SORT_BY_COUNTRY             = 2;
        SORT_BY_STATE               = 3;
        SORT_BY_CITY                = 4;
        SORT_BY_ACCESS_NUMBER       = 5;
    }

    optional Filter filter                      = 1;
    optional PagingData paging_data             = 2;
    optional SortingData sorting_data           = 3;
    repeated AccessNumber access_numbers        = 4;
    optional AccessNumber default_access_number = 5;
}

message Account {
    message Balance {
        optional string balance_type            = 1;
        optional MonetaryValue monetary_value   = 2;
    }

    optional string product                 =  1;
    optional Info info                      =  2;
    optional Identity identity              =  3;
    repeated ContactMethod contact_methods  =  4;
    repeated Balance balances               =  5;
    optional Affiliate affiliate            =  6;
    optional Language language_code         =  7;
    optional string timezone                =  8;
    optional bool is_verified               =  9;
}

message AccountSku {
    optional SKU sku            = 1;
    optional bool is_active     = 2;
    repeated Feature features   = 3;
}


message AccountSkuList {
    message Filter {
        optional bool is_active     = 1;
        optional string category    = 2;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED     = 1;
        SORT_BY_PROVIDER_TYPE    = 2;
    }

    optional Filter filter                      = 1;
    optional PagingData paging_data             = 2;
    optional SortingData sorting_data           = 3;
    repeated AccountSku account_skus           = 4;
}

message AccountRegistration {
    optional Account account                    = 1;
    repeated Credential credentials             = 2;
    optional AccountSession account_session     = 3; // Will be populated on response
}

message AccountSession {
    optional Info info                          = 1;
    optional Account account                    = 2;
    optional Credential.Identifier identifier   = 3;
    optional string token                       = 4;
    optional IpAddress ip_address               = 5;
}

message AccountSessionList {
    message Filter {
        optional Credential.Identifier identifier   = 1;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED     = 1;
        SORT_BY_PROVIDER_TYPE    = 2;
    }

    optional Filter filter                      = 1;
    optional PagingData paging_data             = 2;
    optional SortingData sorting_data           = 3;
    repeated AccountSession account_sessions    = 4;
}

message AccountSettings {
    optional Info info                      = 1;
    optional KeyValueList settings          = 2;
}

message Affiliate {
    optional Info info          = 1;
    optional string name        = 2;
    optional string code        = 3;
}

message Application {
    optional Info info          = 1;
    optional string product     = 2;
    optional string token       = 3;
}

message ApplicationData {
    optional string identifier      = 1;
    optional bytes data             = 2;
}

message Call {
    enum Direction {
        INBOUND     = 1;
        OUTBOUND    = 2;
    }

    message Provider {
        optional string name        = 1;
        optional string identifier  = 2;
    }

    enum Status {
        QUEUED          = 0;
        CANCELED        = 1;
        IN_PROGRESS     = 2;
        COMPLETED       = 3;
    }

    optional Info info                               =  1;
    optional Provider provider                       =  2;
    optional Owner owner                             =  3;
    optional Direction direction                     =  4;
    optional Caller source                           =  5; // REMEMBER TO CONSIDER FORWARDED_FROM
    optional Caller destination                      =  6;
    optional Status status                           =  7;
    optional DateTime started                        =  8;
    optional DateTime ended                          =  9;
    optional int32 duration                          = 10;
    repeated Recording recordings                    = 11;
    repeated Call calls                              = 12;
    optional Receipt receipt                         = 13;
    optional IpAddress ip_address                    = 14;
    optional AccessNumber access_number              = 15;
    repeated AccessNumber alternative_access_numbers = 16;
    optional string access_code                      = 17;
    repeated CallPlugin call_plugins                 = 18;
    optional bool is_unmasked                        = 19;
    optional bool is_blacklisted                     = 20;
}

message CallPlugin {
    enum PluginType {
        BACKGROUND_NOISE    = 1;
        RECORDING           = 2;
        VOICE_CHANGER       = 3;
    }

    message BackgroundNoise {
        optional string description     = 1;
        optional string audio_url       = 2;
        optional bool loop              = 3;
        optional int32 delay            = 4;
    }

    message Recording {
        optional bool play_warning      = 1;
    }

    message VoiceChanger {
        optional string description         = 1;
        optional Decimal pitch              = 2;
        optional Decimal pitch_octaves      = 3;
        optional int32 pitch_semi_tones     = 4;
        optional Decimal rate               = 5;
        optional Decimal tempo              = 6;
    }

    optional Info info                  = 1;
    optional PluginType plugin_type     = 2;
    optional bytes plugin               = 3;
}

message Caller {
    optional Info info                      = 1;
    optional ContactMethod contact_method   = 2;
    optional Identity identity              = 3;
    optional Location location              = 4;
    optional bool is_blacklisted            = 5;
}

message CallerList {
    message Filter {
        optional bool is_blacklisted        = 1;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED                = 1;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Caller callers                 = 4;
}

message CallList {
    message Filter {
        optional Info info                  =  1;
        optional Caller source              =  2;
        optional Caller destination         =  3;
        optional DateTime started_before    =  4;
        optional DateTime started_after     =  5;
        optional DateTime ended_before      =  6;
        optional DateTime ended_after       =  7;
        repeated Call.Status status         =  8;
        optional bool has_child_calls       =  9;
        optional bool has_recordings        = 10;
        optional bool is_unmasked           = 11;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED        = 1;
        SORT_BY_SOURCE_ADDRESSS     = 2;
        SORT_BY_DESTINATION_ADDRESS = 3;
        SORT_BY_EVENT_DIRECTION     = 4;
        SORT_BY_STATUS              = 5;
        SORT_BY_START_TIME          = 6;
        SORT_BY_END_TIME            = 7;
        SORT_BY_DURATION            = 8;
        SORT_BY_IP_ADDRESS          = 9;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Call calls                     = 4;
}

message Client {
    message App {
        optional string version         = 1;
        optional string push_token      = 2;
        optional string identifier      = 3; // Ex: co.teltech.trapcall
    }

    enum OperatingSystem {
        ANDROID     = 1;
        IOS         = 2;
    }

    optional Info info                      =  1;
    optional string device_id               =  2;
    optional string make                    =  3;
    optional string model                   =  4;
    optional OperatingSystem os             =  5;
    optional string os_version              =  6;
    optional bool muted                     =  7;
    optional double volume                  =  8;
    optional App app                        =  9;
    optional TelecomCarrier telecom_carrier   = 10;
    optional string language_code           = 11;
    optional string timezone                = 12;
}

message CloudMessage {
    optional string id                  = 1;
    optional string topic               = 6;
    optional Method method              = 2;
    optional Resource resource          = 3;
    optional Application application    = 4;
    optional bytes body                 = 5;
}

message Cnam {
    optional Identity identity          = 1;
    optional Location location          = 2;
}

message ContactMethod {
    enum ContactType {
        PHONE   = 0;
        EMAIL   = 1;
        CHAT    = 2;
    }

    optional ContactType contact_type   = 1;
    optional string address             = 2;
    optional string label               = 3;
}

message Coupon {
    enum DiscountType {
        PERCENTAGE      = 1;
        FIXED_AMOUNT    = 2;
    }

    optional Info info                      = 1;
    optional string code                    = 2;
    optional DiscountType discount_type     = 3;
    optional SKU sku                        = 4;

    oneof discount {
        Decimal percentage             = 5;
        MonetaryValue fixed_amount     = 6;
    }
}

message Credential {

    message Identifier {
        enum IdentifierType {
            UNKNOWN                 = 0;
            EMAIL_ADDRESS           = 1;
            PHONE_NUMBER            = 2;
            USERNAME                = 3;
            FACEBOOK                = 4;
            TWITTER                 = 5;
            GOOGLE_PLUS             = 6;
            MULTI_FACTOR_REQUEST    = 7;
            LEGACY_PIN              = 8;
        }

        optional Credential.Identifier.IdentifierType identifier_type   = 1;
        optional string identifier                                      = 2;
    }

    message Secret {
        enum SecretType {
            PASSWORD        = 1;
            PIN             = 2;
        }

        optional Credential.Secret.SecretType secret_type   = 1;
        optional string secret                              = 2;
    }

    optional Info info                          = 1;
    optional Credential.Identifier identifier   = 2;
    optional Credential.Secret secret           = 3;
    optional bool is_verified                   = 4;
}

message CredentialList {
    message Filter {
        optional Credential.Identifier identifier   = 1;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED       = 1;
        SORT_BY_PROVIDER_TYPE      = 2;
        SORT_BY_IDENTIFIER         = 3;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Credential credentials         = 4;
}

message CredentialReminderLookup {
    enum SearchType {
        EMAIL           = 1;
        PHONE_NUMBER    = 2;
    }

    optional SearchType search_type                     = 1;
    optional string search                              = 2;
    repeated CredentialReminder credential_reminders    = 3;
}

message CredentialReminder {
    enum DeliveryMethod {
        ANY_AVAILABLE   = 0;
        SMS             = 1;
        EMAIL           = 2;
        PHONE           = 3;
        ALL_AVAILABLE   = 255; // 2 ** 8 - 1 FOR THE HIGHEST ENUM 8 BITS AVAILABLE
    }

    optional DeliveryMethod delivery_method     = 1;
    optional string delivery_address            = 2;
}

message CredentialTelecomCarrier {
    optional Credential credential                  = 1;
    optional TelecomCarrier telecom_carrier        = 2;
}

message CredentialVerification {
    optional Info info                          = 1;
    optional Credential credential              = 2;
    optional bool is_verified                   = 3;
    optional DateTime date_verified             = 4;
}

// We won't be needing to implement this for the time being
// message CredentialReminderList {
//     message Filter {
//     }
//
//     optional Filter filter                              = 1;
//     optional PagingData paging_data                     = 2;
//     optional SortingData sorting_data                   = 3;
//     repeated CredentialReminder credential_reminders    = 4;
// }

// -> POST CredentialReminderLookupList
// CredentialReminderLookup:{
//     SearchType: PHONE_NUMBER,
//     Search: "+15038884341",
//     CredentialReminders:[]
// }
//
// <- POST CredentialReminderLookup
// CredentialReminderLookup{
//     SearchType: PHONE_NUMBER,
//     Search: "+15038884341",
//     CredentialReminders:[
//         CredentialReminder:{
//             DeliveryMethod: SMS,
//             DeliveryAddress: "+1503***4341"
//         }
//         CredentialReminder:{
//             DeliveryMethod: PHONE,
//             DeliveryAddress: "+1503***4341"
//         } <--
//         CredentialReminder:{
//             DeliveryMethod: SMS,
//             DeliveryAddress: "+1503***4342"
//         }
//         CredentialReminder:{
//             DeliveryMethod: PHONE,
//             DeliveryAddress: "+1503***4342"
//         }
//         CredentialReminder:{
//             DeliveryMethod: EMAIL,
//             DeliveryAddress: "bry*****ltech.co"
//         }
//     ]
// }
//
// ......................
//
// USER INTERACTION HERE
//
// ......................
//
// -> POST CredentialReminderList
// CredentialReminder:{
//     DeliveryMethod: SMS,
//     DeliveryAddress: "+15038884341"
// }
//
// <- POST CredentialReminder
// CredentialReminder:{
//     DeliveryMethod: SMS,
//     DeliveryAddress: "+15038884341"
// }

message CreditCard {
    enum CardType {
        UNKNOWN     = 0;
        VISA        = 1;
        MASTERCARD  = 2;
        AMEX        = 3;
        DISCOVER    = 4;
        JCB         = 5; //one of stripes supported cards
        DINERS_CLUB = 6; //one of stripes supported cards
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED    = 1;
        SORT_BY_CARD_TYPE       = 2;
        SORT_BY_LAST_FOUR       = 3;
        SORT_BY_IS_ACTIVE       = 4;
    }

    optional Info info                      = 1;
    optional Identity billing_identity      = 2;
    optional Location billing_address       = 3;
    optional string card_number             = 4;
    optional string card_number_truncated   = 5; // Used for display purposes
    optional CardType card_type             = 6;
    optional int32 expiration_month         = 7;
    optional int32 expiration_year          = 8;
    optional string security_code           = 9;
    optional bool is_expired                = 10;
}
message CreditCardList {
    message Filter {
        optional CreditCard.CardType card_type   = 1;
        optional string card_number_truncated    = 2;
        optional Identity billing_identity       = 3;
        optional Location billing_address        = 4;
    }

    optional Filter filter                       = 1;
    optional PagingData paging_data              = 2;
    optional SortingData sorting_data            = 3;
    repeated CreditCard credit_cards             = 4;
}

message CustomerService {
    repeated ContactMethod contact_methods        = 1;
    repeated ServiceAvailability availabilities   = 2;
}

message DateTime {
    optional string utc_timestamp   = 1; // Convenient for logging, should not be used
    optional int64 unixtime         = 2;
}

message Decimal {
    optional uint64 lo            = 1; // the first 64 bits of the underlying value
    optional uint32 hi            = 2; // the last 32 bis of the underlying value
    optional sint32 sign_scale    = 3; // the number of decimal digits, and the sign
}

message Developer {
    optional Info info                  = 1;
    optional string first_name          = 2;
    optional string last_name           = 3;
    repeated Application applications   = 4;
}

message Document {
    enum Format {
        PLAIN_TEXT   = 1;
        HTML         = 2;
        MARKDOWN     = 3;
        XML          = 4;
        JSON         = 5;
        CSV          = 6;
        PDF          = 7;
    }

    enum Encoding {
        UTF8   = 1;
    }

    optional Info info              = 1;
    optional Format format          = 2;
    optional Encoding encoding      = 3;
    optional string body            = 4;
    optional string file_name       = 5;
    optional Language language      = 6;
    optional DateTime last_updated  = 7;
}

message DocumentList {
    message Filter {
        optional Document.Format format_type  = 1;
        optional string file_name             = 2; // will make sure the filename contains the string
        optional bool empty_body              = 3; // returns empty bodies if true
        optional Language language            = 4;
    }

    enum SortableFields {
        SORT_BY_ID                  = 1;
        SORT_BY_DATE_CREATED        = 2;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Document documents              = 4;
}

message Error {
    optional ErrorCode code                 = 1;
    optional string message                 = 2;
}

message ErrorList {
    repeated Error errors   = 1;
}

message Event {
    enum Action {
	ACTION_UNKNOWN           = 0;
	ACTION_CREATE            = 1;
	ACTION_CREDIT            = 2;
	ACTION_MIGRATE           = 3;
	ACTION_UPDATE            = 4;
	ACTION_CANCEL            = 5;
    }

    enum Category {
	CATEGORY_UNKNOWN         = 0;
        CATEGORY_ACCOUNT         = 1;
        CATEGORY_AMI             = 2;
        CATEGORY_AUTOREPLENISHER = 3;
        CATEGORY_CREDENTIAL      = 4;
        CATEGORY_CREDITCARD      = 5;
        CATEGORY_SMS             = 6;
        CATEGORY_SUBSCRIPTION    = 7;
        CATEGORY_TRANSACTION     = 8;
        CATEGORY_TRANSFER        = 9;
    }

    optional Info info           = 1;
    optional int32 category      = 2;
    optional int32 action        = 3;
    optional string text         = 4;
    optional string value        = 5;
    optional string reference_id = 6;
}

message File {
    optional Info info      = 1;
    optional string name    = 2;
}

message Feature {
        optional Info info          = 1;
        optional string title       = 2;
        optional string category    = 3;
}

message FeatureList {
    repeated Feature features    =  1;
}

message GenericSuccess {
    optional string message   = 1;
}

message Identity {
    enum Error {
        INVALID_TITLE           = 1;
        INVALID_FIRST_NAME      = 2;
        INVALID_MIDDLE_NAME     = 3;
        INVALID_LAST_NAME       = 4;
    }

    enum Gender {
        MALE    = 1;
        FEMALE  = 2;
    }

    optional string title           = 1;
    optional string first_name      = 2;
    optional string middle_name     = 3;
    optional string last_name       = 4;
    optional string suffix          = 5;
    optional string full_name       = 6;
    optional int32 age              = 7;
    optional Gender gender          = 8;
}

message Info {
    optional string uuid            = 1;
    optional string hash            = 2;
    optional bool exists            = 3;
    optional bool is_deleted        = 4;
    optional DateTime created       = 5;
    optional DateTime expires       = 6;
}

message InfoList {
    repeated Info infos             = 1;
}

message Invoice {
    optional Info info                  = 1;
    repeated SKUQuantity sku_quantities = 2;
    optional MonetaryValue total        = 3;
}

message IpAddress {
    enum Version {
        V4      = 0;
        V6      = 1;
    }

    optional string address         = 1;
    optional Version version        = 2;
}

message KeyValue {
    optional Info info              = 1;
    optional string key             = 2;
    repeated bytes value            = 3;
    optional ValueType value_type   = 4;
    optional string category         = 5;

    enum ValueType {
        BYTES       = 0;
        BOOL        = 1;
        STRING      = 2;
        INT32       = 3;
        FLOAT       = 4;
    }
}

message KeyValueList {

    optional Info info              = 1;
    optional string description     = 2;
    repeated KeyValue key_values    = 3;
}

message Language {
    optional Info info           = 1;
    optional string identifier   = 2; // ID (Example: zh-Hans, en-GB)
    optional string name         = 3; // Chinese
    optional string region_name  = 4; // China
    optional string script_name  = 5; // Simplified
    optional string code         = 6; // 2 digit language code (Example: ch)
    optional string region       = 7; // 2 character country/region code (Example: CN)
    optional string script       = 8; // 4 character script (Example: Hans)
}

message Location {
    optional string label           = 1;
    optional string address         = 2;
    optional string city            = 3;
    optional string state           = 4;
    optional string postal_code     = 5;
    optional string country         = 6;
    optional string country_iso     = 7;
    optional float latitude         = 8;
    optional float longitude        = 9;
}

message LockDown {
    optional Client client              = 1;
    optional bool is_active             = 2;
}

message SupportTicket {
    optional Info info                  = 1;
    optional string message             = 3;
}

message TelecomCarrier {
    enum CarrierType {
        MOBILE       = 1;
        LANDLINE     = 2;
    }

    optional string mcc                 = 1;
    optional string mnc                 = 2;
    optional string name                = 3;
    optional string country_code        = 4;
    optional CarrierType type           = 5;
    optional bool is_supported          = 6;
}

message TranslationDictionary {
    optional Info info              = 1;
    optional Language language      = 2;
    repeated KeyValue translations  = 3;
}

message MonetaryValue {
    enum Unit {
        CREDIT      = 1;
        USD         = 2;
    }

    optional Decimal amount         = 1;
    optional Unit unit              = 2;
}

message MultiFactor {
    enum DeliveryMethod {
        SMS         = 1;
        EMAIL       = 2;
        PHONE_CALL  = 3;
    }

    optional Info info                      = 1;
    optional DeliveryMethod delivery_method = 2;
    optional string identifier              = 3;
}

message MultiFactorRequest {
    optional Info info                      = 1;
    repeated MultiFactor possibilities      = 2;
    optional string multi_factor_uuid       = 3; // Use as identifier in auth type MULTI_FACTOR_REQUEST
    optional DateTime expires               = 4;
}

message Note {
	optional Info info                  = 1;
	optional string reference_id        = 2;
	optional string content             = 3;
}

message Owner {
    optional Application application        =  1;
    optional Account account                =  2;
}

message PagingData {
    optional int32 page             = 1;
    optional int32 page_size        = 2;
    optional int32 total_pages      = 3;
    optional int32 total_records    = 4;
    optional int32 first_page       = 5;
    optional int32 previous_page    = 6;
    optional int32 next_page        = 7;
    optional int32 last_page        = 8;
}

message PushToken {

    enum Error {
        INVALID_TOKEN_PROVIDED       = 1;
        INVALID_PROVIDER_PROVIDED    = 2;
    }

    enum Provider {
        APPLE_PUSH_NOTIFICATION_SERVICE             = 1;
        APPLE_SANDBOX_PUSH_NOTIFICATION_SERVICE     = 2;
        GOOGLE_CLOUD_MESSAGING                      = 3;
    }


    optional Info info                  = 1;
    optional string token               = 2;
    optional Account account            = 3;
    optional DateTime created           = 4;
    optional Provider provider          = 5;


}

message PushTokenList {
    repeated PushToken push_tokens      = 1;
}

message PushMessage {

    enum MessageType {
        DEFAULT      = 0;
        SILENT       = 1;
    }

    optional Info info                      = 1;
    repeated string recipients              = 2; //the user or token its going to
    optional string sound                   = 3;
    optional string badge                   = 4;
    optional string image                   = 5;
    optional MessageType message_type       = 6;
    optional string message                 = 7;
    optional string payload                 = 8;
    optional Method method                  = 9;
    optional Resource resource              = 10;
}

message QueuedCall {
    optional Call call      = 1;
    optional string code    = 2;
}

message PurchaseOrder {
    repeated SKUQuantity sku_quantities     = 1;
    repeated Transaction transactions       = 2;
    repeated Coupon coupons                 = 3;
}

message Receipt {
    optional Info info                      = 1;
    repeated SKUQuantity sku_quantities     = 2;
    optional MonetaryValue subtotal         = 3;
    optional MonetaryValue tax              = 4;
    optional MonetaryValue total            = 5;
    repeated Transaction transactions       = 6;
    repeated Coupon coupons                 = 7;
}

message Recording {
    enum RecordingType {
        VOICEMAIL = 1;
        BLACKLIST = 2;
        GREETING  = 3;
        CALL      = 4;
    }

    optional Info info                    = 1;
    optional File file                    = 2;
    repeated string labels                = 3;
    optional int32 duration               = 4;
    optional int32 total_plays            = 5;
    optional bool is_public               = 6;
    optional RecordingType recording_type = 7;
    // CONSIDER TRANSCRIPTIONS
}

message RecordingList {
    message Filter {
        optional DateTime created_before = 1;
        optional DateTime created_after  = 2;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED    = 1;
        SORT_BY_DATE_UPDATED    = 2;
        SORT_BY_DURATION        = 3;
        SORT_BY_TOTAL_PLAYS     = 4;
    }

    optional Filter filter                       = 1;
    optional PagingData paging_data              = 2;
    optional SortingData sorting_data            = 3;
    repeated Recording recordings                = 4;
}

message Redirect {
    optional string redirect_url        = 1;
}

message Request {
    optional Application application            = 1;
    optional AccountSession account_session     = 2;
    optional Client client                      = 3;
    optional IpAddress ip_address               = 4;
    optional bytes body                         = 5; // Encoded protobuf
}

message Response {
    optional bytes body     = 1;
}

message ServiceAvailability {
    enum ServiceType {
        PHONE   = 1;
        EMAIL   = 2;
        CHAT    = 3;
    }

    enum Day {
        MONDAY      = 1;
        TUESDAY     = 2;
        WEDNESDAY   = 3;
        THURSDAY    = 4;
        FRIDAY      = 5;
        SATURDAY    = 6;
        SUNDAY      = 7;
    }

    optional ServiceType service_type   = 1;
    optional Day day                    = 2;
    optional int32 start_hour           = 3; // 0 - 23
    optional int32 start_minute         = 4; // 0 - 59
    optional int32 start_second         = 5; // 0 - 59
    optional int32 end_hour             = 6; // 0 - 23
    optional int32 end_minute           = 7; // 0 - 59
    optional int32 end_second           = 8; // 0 - 59
    optional bool is_24_hours           = 9;
    optional string timezone            = 10;
}

message ServiceAvailabilityList {
    repeated ServiceAvailability service_availabilities      = 1;
}

message SKU {
    optional Info info                                 = 1;
    optional string description                        = 2;
    optional MonetaryValue total                       = 3;
    optional string third_party_id                     = 4;
    optional string category                           = 5;
    repeated Transaction.BillingMethod billing_methods = 6;
    optional string variation                          = 7;
    repeated Feature features                          = 8;
    repeated SKU fees                                  = 9;
}

message SKUList {
    message Filter {
        optional string category                           = 1;
        repeated Transaction.BillingMethod billing_methods = 2;
        optional string variation                          = 3;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED    = 1;
        SORT_BY_CATEGORY        = 2;
        SORT_BY_TOTAL           = 3;
    }

    optional Filter filter                       = 1;
    optional PagingData paging_data              = 2;
    optional SortingData sorting_data            = 3;
    repeated SKU skus                            = 4;
}
message SKUQuantity {
    optional SKU sku        = 1;
    optional int32 quantity = 2;
}

message SortingData {
    message Sort {
        enum Direction {
            ASC     = 1;
            DESC    = 2;
        }

        optional int32 field             = 1;
        optional Direction direction     = 2;
    }

    repeated Sort sorts             = 1;
}

enum TimeInterval {
    INFINITE        = 0;
    SECOND          = 1;
    MINUTE          = 2;
    HOUR            = 3;
}

message TimelapseAnalytic {
    enum AnalyticCategory {
        UNKNOWN                 = 0;
        AVERAGE_ORDER_VALUE     = 1;
        TUTUM_NODE_COUNT        = 2;
        TUTUM_CONTAINER_COUNT   = 3;
    }

    message AnalyticUnit {
        optional string label           = 1;
        optional Decimal value          = 2;
        optional DateTime date_time     = 3;
    }

    optional AnalyticCategory analytic_category = 1;
    repeated AnalyticUnit analytic_units        = 2;
    optional DateTime start_time                = 3;
    optional DateTime end_time                  = 4;
}

message TimelapseAnalyticList {
    message Filter {
        optional TimelapseAnalytic.AnalyticCategory analytic_category   = 1;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED     = 1;
    }

    optional Filter filter                          = 1;
    optional PagingData paging_data                 = 2;
    optional SortingData sorting_data               = 3;
    repeated TimelapseAnalytic timelapse_analytics  = 4;
}

message Transaction {
    enum TransactionType {
        CHARGE          = 1;
        AUTHORIZATION   = 2;
        REFUND          = 3;
        VOID            = 4;
    }

    enum BillingMethod {
        CREDIT_CARD         = 1;
        APP_STORE           = 2;
        PLAY_STORE          = 3;
        PAYPAL              = 4;
        BITCOIN             = 5;
    }

    enum Processor {
        LITLE               = 1;
        APPLE_APP_STORE     = 2;
        GOOGLE_PLAY_STORE   = 3;
        PAYPAL_EXPRESS      = 4;
        COINBASE            = 5;
        STRIPE              = 6;
    }

    optional Info info                              = 1;
    optional TransactionType transaction_type       = 2;
    optional BillingMethod billing_method           = 3;
    optional Processor processor                    = 4;
    optional TransactionGateway transaction_gateway = 5;
    optional string transaction_gateway_id          = 6;
    optional bytes data                             = 7; // CreditCard / IosReceipt / etc
    optional string sanitized_identifier            = 8;
    optional MonetaryValue total                    = 9;
    repeated Transaction transactions               = 10;
    optional bool is_approved                       = 11;
}

message TransactionList {
    message Filter {
        optional DateTime created_before                        = 1;
        optional DateTime created_after                         = 2;
        optional IpAddress ip_address                           = 3;
        optional Transaction.TransactionType transaction_type   = 4;
        optional Transaction.Processor processor                = 5;
        optional MonetaryValue amount_equal                     = 6;
        optional MonetaryValue amount_less_than                 = 7;
        optional MonetaryValue amount_greater_than              = 8;
        optional bool is_approved                               = 9;
    }

    enum SortableFields {
        SORT_BY_ID                  = 1;
        SORT_BY_DATE_CREATED        = 2;
        SORT_BY_IP_ADDRESS          = 3;
        SORT_BY_TRANSACTION_TYPE    = 4;
        SORT_BY_PAYMENT_METHOD      = 5;
        SORT_BY_AMOUNT              = 6;
        SORT_BY_IS_APPROVED         = 7;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Transaction transaction        = 4;
}

message TransactionGateway {
    optional Info info          = 1;
    optional string name        = 2;
    optional string comment     = 3;
}

message Voicemail {
    optional Info info                      = 1;
    optional Call call                      = 2;
    optional Recording recording            = 3;
    optional string transcription_text      = 4;
    optional bool is_read                   = 5;
    optional bool is_deleted                = 6;
}

message VoicemailList {
    message Filter {
        optional DateTime created_before    = 1;
        optional DateTime created_after     = 2;
        optional bool is_read               = 3;
        optional bool is_deleted            = 4;
    }

    enum SortableFields {
        SORT_BY_DATE_CREATED        = 1;
        SORT_BY_READ                = 2;
        SORT_BY_UNREAD              = 3;
    }

    optional Filter filter                  = 1;
    optional PagingData paging_data         = 2;
    optional SortingData sorting_data       = 3;
    repeated Voicemail voicemails           = 4;
    optional bool mark_all_read             = 5;
}



// MULTI FACTOR AUTH
// POST /Account/Sessions -d'application_product=spoofcard&application_token=1234&auth_type=2&identifier=5038884341&secret=1234'
// MULTI_FACTOR_REQUEST - {
//  "uuid": "1232-4234-1232-4234-1232-4234"
//  "possibilities": [
//      {
//          "uuid":"possibility1",
//          "mult_factor_type":"phone_call",
//          "identifier":"503***4341",
//      },
//      {
//          "uuid":"possibility2",
//          "mult_factor_type":"sms",
//          "identifier":"503***4341",
//      }
//  ],
//  "multi_factor_uuid": "" // MUST REPLY WITH UUID FILLED
// }
//
// POST /MultiFactorRequests -d'uuid=1232-4234-1232-4234-1232-4234&multi_factor_uuid=possibility1'
//
// POST /Account/Sessions -d'application_product=spoofcard&application_token=1234&auth_type=5&identifier=1232-4234-1232-4234-1232-4234&secret=1234'
// ACCOUNT SESSION - {
//  "uuid": "abcd-abcd-abcd-abcd-abcd-abcd"
//  "account": {},
//  "token":"afasdfsafdasfdasfasfasfdasdf"
// }
//
//
// GET /Calls?application_product=spoofcard&application_token=1234&account_session_token=abcd-abcd-abcd-abcd-abcd-abcd&source_address=5038884341
// {
//
// }

package teltech;

enum Resource {
    ERROR_LIST                          =  0;
    GENERIC_SUCCESS                     =  1;
    ACCOUNT                             =  2;
    ACCOUNT_SESSION                     =  3;
    MULTI_FACTOR_REQUEST                =  4;
    CREDENTIAL                          =  5;
    IDENTITY                            =  6;
    KEY_VALUE_BUCKET_LIST               =  7;
    CALL_LIST                           =  8;
    INFO                                =  9;
    INFO_LIST                           = 10;
    DOCUMENTATION                       = 11;
    ACCOUNT_SESSION_LIST                = 12;
    CREDENTIAL_LIST                     = 13;
    CALL                                = 14;
    CREDIT_CARD                         = 15;
    CREDIT_CARD_LIST                    = 16;
    TRANSACTION                         = 17;
    TRANSACTION_LIST                    = 18;
    RECORDING                           = 19;
    RECORDING_LIST                      = 20;
    CREDENTIAL_REMINDER_LOOKUP_LIST     = 21;
    CREDENTIAL_REMINDER_LIST            = 22;
    DOCUMENTATION_LIST                  = 23;
    ACCESS_NUMBER_LIST                  = 24;
    ACCOUNT_REGISTRATION                = 25;
    ACCOUNT_SETTINGS                    = 26;
    SKU_LIST                            = 27;
    EVENT                               = 28;
    PUSH_NOTIFICATION                   = 29;
    PUSH_TOKEN                          = 30;
    PUSH_TOKEN_LIST                     = 31;
    PURCHASE_ORDER                      = 32;
    RECEIPT                             = 33;
    CALLER                              = 34;
    CREDENTIAL_VERIFICATION             = 35;
    TIMELAPSE_ANALYTIC                  = 36;
    CREDENTIAL_TELECOM_CARRIER          = 37;
    TIMELAPSE_ANALYTIC_LIST             = 38;
    ACCOUNT_SKU_LIST                    = 39;
    VOICEMAIL_LIST                      = 40;
    VOICEMAIL                           = 41;
    CALLER_LIST                         = 42;
    CREDENTIAL_REMINDER                 = 43;
    LOCK_DOWN                           = 44;
    DOCUMENT_LIST                       = 45;
    SERVICE_AVAILABILITY                = 46;
    SERVICE_AVAILABILITY_LIST           = 47;
    CUSTOMER_SERVICE                    = 48;
    NOTE                                = 49;
    SUPPORT_TICKET                      = 50;
}

enum Method {
    REPLY         = 0;
    GET           = 1;
    CREATE        = 2;
    UPDATE        = 3;
    DELETE        = 4;
    INVOICE       = 5;
    GET_INFO      = 6;
    NOTIFICATION  = 7;
}

package teltech;


enum ErrorCode {
    // General
    UNKNOWN                            = 0;
    TIMEOUT                            = 1;
    UNMARSHAL                          = 2;
    MARSHAL                            = 3;
    INVALID_ACCOUNT                    = 4;
    INVALID_TOKEN                      = 5;
    NO_CONTACT_METHOD_PROVIDED         = 6;
    NO_FIELDS_PROVIDED                 = 7;
    INSUFFICIENT_BALANCE               = 8;
    INVALID_PROVIDER                   = 9;
    DATABASE                           = 10;
    INVALID_UUID_PROVIDED              = 11;
    INVALID_INFO_PROVIDED              = 12;
    NO_RESULTS_FOUND                   = 13;
    INVALID_METHOD_PROVIDED            = 14;
    INVALID_OS_PROVIDED                = 15;
    INVALID_VERSION_PROVIDED           = 16;
    INVALID_CLIENT                     = 17;
    DELIVERY_FAILURE                   = 18;
    INVALID_FILE                       = 19;


    // Credentials
    INVALID_IDENTIFIER                 = 100;
    INVALID_SECRET                     = 101; 
    IDENTIFIER_EXISTS                  = 102;
    INVALID_PHONE_PIN                  = 103;
    INVALID_IDENTIFIER_TYPE            = 104;
    INVALID_SECRET_TYPE                = 105;
    ONE_CREDENTIAL_REQUIRED            = 106;
    IDENTIFIER_DOES_NOT_EXIST          = 107;
    UNSUPPORTED_IDENTIFIER             = 108;
    INVALID_CREDENTIALS_PROVIDED       = 109;


    // Credit Card
    INVALID_CREDIT_CARD                     = 120;
    INVALID_CREDIT_CARD_NUMBER              = 121;
    INVALID_CREDIT_CARD_EXPIRATION          = 122;
    INVALID_CREDIT_CARD_SECURITY_CODE       = 123;
    INVALID_CREDIT_CARD_EXPIRATION_MONTH    = 124;
    INVALID_CREDIT_CARD_EXPIRATION_YEAR     = 125;
    CREDIT_CARD_DECLINED                    = 126;
    CREDIT_CARD_EXPIRED                     = 127;
    CREDIT_CARD_MISSING_FIELDS              = 128;


    // Location
    INVALID_ADDRESS                    = 140;
    INVALID_CITY                       = 141;
    INVALID_STATE                      = 142;
    INVALID_POSTAL_CODE                = 143;

    // Call
    INVALID_DESTINATION_ADDRESS        = 160;
    INVALID_ACCESS_NUMBER              = 161;
    DESTINATION_SPOOFING_BLOCKED       = 162;
    DESTINATION_ADDRESS_BLACKLISTED    = 163;
    FREE_CALLS_EXCEEDED                = 164;
    NONEXISTENT_RATE                   = 165;

    // Identity
    INVALID_TITLE                      = 180;
    INVALID_FIRST_NAME                 = 181;
    INVALID_MIDDLE_NAME                = 182;
    INVALID_LAST_NAME                  = 183;
    INVALID_EMAIL_ADDRESS              = 184;

    //CONTACT METHOD
    INVALID_CONTACT_METHOD_PROVIDED    = 200;

    // TimelapseAnalytic
    INVALID_ANALYTIC_CATEGORY           = 220;

    //PushToken 
    NO_TOKENS_FOUND                     = 240;

    //SKU
    INVALID_SKU                         = 260;

    //PURCHASE_ORDER - allocate 50 for payments.
    PROCESSSING_ORDER_FAILED            = 280;


    //CREDENTIAL_VERIFICATION           
    CREDENTIAL_VERIFICATION_TIMEOUT     = 230;
    CREDENTIAL_VERIFICATION_FAILED      = 231;

    // RECORDING 
    UNSUPPORTED_RECORDING_TYPE_PROVIDED = 300;
    RECORDING_DOES_NOT_EXIST            = 301;

    // NOTE
    INVALID_NOTE                        = 320;
}

package teltech;

import "api.proto";

message BitcoinData {
    optional string return_url      = 1;
    optional string cancel_url      = 2;
}

message CreditCardData {
    optional CreditCard credit_card     = 1;
}

message PaypalData {
    optional string return_url      = 1;
    optional string cancel_url      = 2;
}